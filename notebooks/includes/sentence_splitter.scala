// Databricks notebook source
// MAGIC %run ./officer_funcs

// COMMAND ----------

import org.apache.spark.sql.DataFrame
import org.apache.spark.sql.functions._
import scala.util.matching.Regex


val withSplitSentences = (df: DataFrame) => {
  val sentenceStartTokens = List("Die ", "Gesellschaft ", "Nicht ", "Geschäftsanschrift:", "Bestellt ", "Änderung ", "Ausgeschieden:", "Prokura", "Sitz", "Geändert,", "Firma:", "Gesamtprokura", "Der ", "Ist ",  "Durch ", "Das ", "Neuer ", "Nach ", "Allgemeine", "Allgemeine Vertretungsregelung", "Mit ", "Zum ", "Gemäß", "Von ", "Personenbezogene", "Aktiengesellschaft.", "Über ", "Einzelprokura", "Name ", "Stamm-", "Vertretungsbefugnis", "Dem ", "Vorstand:", "Personendaten", "Berichtigung", "Als ", "Beim ", "Auf ", "Es ", "Firma", "Inländische", "Zweigniederlassung", "Aufgrund",  "Gegenstand", "Geschäftsanschrift:;",  "Eintragung", "Wohnort", "Gesellschaftsvertrag", "Jeder ", "Ergänzend", "Am ", "Eine", "Zwischen", "Vertretungsregelung", "Zweigniederlassung/en", "Eingetragene", "Neu ", "Europäische", "Bekanntmachung", "Nunmehr", "Geburtsdatum", "In ", "Grund-", "Gesamtprokuren", "Ergänzt:", "Vorstandsvorsitzender:", "Rechtsformzusatz", "Geschäftsanschrift:;.", "Unternehmensgegenstand:", "Satzungsdaten", "Empfangsberechtigte", "Neue", "Ausgeschieden", "Geschäftsführer:", "Geschäftsanschrift", "Geändert ", "Widerspruchsfrist:", "Berichtigt", "Vertretung", "Geschäftsanschrift:.", "Aktiengesellschaft", "Prokuren", "Gelöscht", "Stammkapital", "Berichtigt,", "Neues", "Eintrag", "Amtsgericht", "Folgende", "Ergänzung", ".Die ", "Entsprechend", "Landkreis", "Nun:", "Zweigniederlassung(en)", "Aufgehoben", "Kapitalgesellschaft", "Rechtsform", "Bemerkung:", "Schreibweise", "nunmehr", "Infolge", "inländische", "geänderte", "Vorstand:;", "Daten ", "Je ", "Vertretungsberechtigung", "Unternehmensgegenstand", "DieGesellschaft", ": Nicht ", "Angaben von", ",Die ", "Umwandlungsvermerk", "Schreibfehlerberichtigung", "Weiterhin", "berichtigt,", "nach ", "Jeweils", "Geänderte", "Tag der", "Dabei", "Director", "Geschäftsführender Direktor", "die ", "Funktionsbezeichnung", "Er vertritt", "Nachstehende", "Schreibfehler berichtigt", "Namensänderung", "Weiterhin,", "Nachstehende", "besondere Vertretungsbefugnis", "Einzelprokuristen", "Wohnsitz", "Nachname", "Weitere Geschäftsführer", "von Amts wegen", "Umwandlungsvermerk", "Geschäftsführer", "Herrschende", "Geändert;", "Private Company", "private company", "Private Limited", "Private limited", "private limited", "Anstelle", "Nachgetragen", "Beim", "Schreibfehlerberichtigung", "nach ", "Private company", "Satzung", "Aktieselskab", "Geschlossene Aktiengesellschaft", "Einpersonengesellschaft", "Beginn", "Zweck", "im Registerblatt wird veröffentlicht", "empfangsberechtigte Person:", "Gesellschaft,", "limited liability company", "Limited Liability Company", "Compania", "Sociedad", "Florida Limited Liability Company", "Gesellschat", "Vormals", "Name", "ApS", "Spolecnost", "Société anonyme",  "Public Company", "SPOLKA", "Spólka", "Kapital von Amts wegen berichtigt", "Ortsbezeichnung des Sitzes", "neuer Sitz :", "Vornamen berichtigt:", "Weiterer Geschäftsführer:", "Zusätzlicher Unternehmensgegenstand:", "geändert, nun:", "Löschung", "Familienname", "neuer Gegenstand", "Ortsname", "Eingetreten", "Untenehmensgegenstand", "Geburtsdaten", "Entstanden durch").sortBy(-_.length)

  
  val suffixedTitleTokens = titleTokenList.map(title => s"$title:")
  
  // tokens where we also split if space preceeds them
  val hardSplitTokens = (List("; ", "Nicht mehr ", "Geschäftsanschrift:", "Bisher:", "Gegenstand:", "Sitz der Firma:", "Sitz:", "Berichtigt:", "Aufgehoben:", "Geändert:", "Rechtsverhältnis:", "Rechtsverhaeltnis:", "Kapital:", "neues Stammkapital :", "Gesellschaftsvertrag vom", "Stamm- bzw. Grundkapital", "Die Gesellschafterversammlung vom", "Änderung der", "Das Gericht beabsichtigt", "Bestellt als Geschäftsführer", "Allgemeine Vertretungsregelung geändert;", "Allgemeine Vertretungsregelung:", "Name:", "Rechtsform:", "Liquidator:", "Erteilt:", "Errichtet:", "Vorstand:", "Grund- oder Stammkapital:", "Grundkapital nun:", "Bestellt:", "Gesamtprokura gemeinsam mit einem Geschäftsführer", "Bestellt Geschäftsleiter:", "Name der Firma:", "Bestellt als Ständiger Vertreter:", "neue Anschrift:", "Nicht mehr Geschäftsführer:", "Geschäftsführer:;", "Bisherige Anschrift:", "bisherige Anschrift:", "alte Anschrift:", "Neue Anschrift:", "neue Firma:", "Sitz verlegt, nun:", "Sitz verlegt; nun:", "Änderung zu Nr.", "Vertretungsregelung:", "Neuer Unternehmensgegenstand:", "neuer Unternehmensgegenstand:", "Prokura:", "Einzelprokura:", "Besondere Vertretungsregelung geändert, nun:", "Kapital geändert, nun:", "Umfang der Vertretungsbefugnis geändert:", "Erweiterter Unternehmensgegenstand:", "Ergänzter Unternehmensgegenstand:", "Anschrift bisher:", "Die Eintragung zu Nr.", "Sitz verlegt nun:", "Neues Stammkapital:", "Grundkapital jetzt:", "Abberufen:", "Neuer Gegenstand des Unternehmens:", "neue inländische Anschrift:", "Gegenstand geändert; nun:", "Firmenname geändert:", "Stammkapital nun:", "Kapital nun:") ++ suffixedTitleTokens).sortBy(-_.length)
  
  val sentenceStartTokensRegex = sentenceStartTokens.map(Regex.quote(_)).mkString("|")
  val hardSplitTokensRegex = hardSplitTokens.map(Regex.quote(_)).mkString("|") // capital regex from event classifications
  
  df
  .withColumn("sentences", regexp_replace($"publicationBody", s"(\\)\\.|[\\.|;]+|,|\\s) ?(?=$hardSplitTokensRegex)", " ___"))
  .withColumn("sentences", split($"sentences", s"(___|(\\)\\.|[\\.|;]+) ?(?=$sentenceStartTokensRegex))"))
}